package com.krking;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicHeader;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.protocol.HTTP;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;

import com.common.Constants;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.widget.Toast;

public class BaseFragment extends Fragment
{
	String serverURL = "http://app.krking.net/";
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
	}
	
	public void showToastMessage( String message )
	{
		Toast.makeText( getActivity(), message, Toast.LENGTH_LONG).show();
	}
	
	public void writeLog( String log )
	{
		Log.i("KRKing", log );
	}
	
	public void execTransReturningString( String url, JSONObject request )
	{
		new TransactionTaskReturningString( this, url ).execute( request );
	}
	
	public void doPostTransaction( String result )
	{
		
	}

	private class TransactionTaskReturningString extends AsyncTask<JSONObject, Integer, String> {

		private ProgressDialog dialog = null;
		private String url = "";
		private BaseFragment fragment;

		public TransactionTaskReturningString( BaseFragment fragment, String url )
		{
			this.fragment = fragment;
			dialog = new ProgressDialog( fragment.getActivity() );
			this.url = url;
		}

		protected void onPreExecute() {
			this.dialog.setMessage("·ÎµùÁß...");
			this.dialog.show();
		}

		protected String doInBackground( JSONObject... data ) {

			try
			{
				HttpClient client = new DefaultHttpClient();
				HttpConnectionParams.setConnectionTimeout(client.getParams(), 10000); //Timeout Limit
				HttpResponse response;
				
				HttpPost post = new HttpPost( serverURL + url );
				
				JSONObject json = null;
				if ( data == null || data[0] == null )
					json = new JSONObject();
				
				StringEntity se = new StringEntity( json.toString(), "UTF-8");
				
				se.setContentType(new BasicHeader(HTTP.CONTENT_TYPE, "application/json"));
				post.setEntity(se);
				response = client.execute(post);

				return EntityUtils.toString(response.getEntity());

			}
			catch(Exception e){
				e.printStackTrace();
				
				writeLog( e.getMessage() );
				
				return Constants.FAIL;
			}
		}

		protected void onProgressUpdate(Integer... progress) {

		}

		protected void onPostExecute(String result) {
			if (dialog.isShowing())
				dialog.dismiss();
			
			fragment.doPostTransaction( result );
		}
	}
}
